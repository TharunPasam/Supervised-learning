# -*- coding: utf-8 -*-
"""k-Nearest

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14dozPOlC2OOSKgpXrGIa9CxDPSpuppIG
"""

from __future__ import print_function, division
import numpy as np
from mlfromscratch.utils import euclidean_distance

class KNN():



    def __init__(self, k=10):
        self.k = k

    def _vote(self, neighbor_labels):

        counts = np.bincount(neighbor_labels.astype('int'))
        return counts.argmax()

    def predict(self, X_test, X_train, y_train):
        y_pred = np.empty(X_test.shape[0])
        for i, test_sample in enumerate(X_test):
            idx = np.argsort([euclidean_distance(test_sample, x) for x in X_train])[:self.k]
            k_nearest_neighbors = np.array([y_train[i] for i in idx])
            y_pred[i] = self._vote(k_nearest_neighbors)

        return y_pred

